@model Senstay.Dojo.Models.InquiriesValidation
@using Senstay.Dojo.Helpers

<div class="dialog-page-content inquiry-info-content">
    <div class="app-dialog-tab">
        <ul class="nav nav-pills">
            <li class="tab-item"><div class="inquiry-info-tab active-tab" onclick="DojoWeb.InquiryForm.switchTabTo('#inquiryInfoHome');">Main</div></li>
            <li class="tab-item"><div class="inquiry-info-tab" onclick="DojoWeb.InquiryForm.switchTabTo('#inquiryInfoProperty');">CPL Information</div></li>
            <li class="tab-item"><div class="inquiry-info-tab" onclick="DojoWeb.InquiryForm.switchTabTo('#inquiryInfoApproval');">Approval</div></li>
            <li class="tab-item"><div class="inquiry-info-tab" onclick="DojoWeb.InquiryForm.switchTabTo('#inquiryInfoTemplate');">Template</div></li>
        </ul>
    </div>

    <div class="form-horizontal">
        <div class="inquiry-tab-content">
            <div class="inquiry-tab-pane" id="inquiryInfoHome">
                <table cellpadding="0" cellspacing="10" width="100%">
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.GuestName, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.GuestName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    <label class="control-label">Property</label>
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.PropertyCode, new { htmlAttributes = new { @class = "form-control ablList", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    <label class="control-label">Account</label>
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Account, new { htmlAttributes = new { @class = "form-control ablList", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.Check_inDate, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.TextBoxFor(m => m.Check_inDate, new { @class = "form-control", @readonly = "readonly", @Value = (Model.Check_inDate != null ? Model.Check_inDate.Value.ToString("d") : null) })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.Check_outDate, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.TextBoxFor(model => model.Check_outDate, new
                           {
                               @class = "form-control",
                               @readonly = "readonly",
                               @Value = (Model.Check_outDate != null ? Model.Check_outDate.Value.ToString("d") : null)
                           })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.LengthofStay, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.LengthofStay, new { htmlAttributes = new { @class = "form-control ablList", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.Check_InDay, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    <textbox id="checkinday" class="form-control" readonly="readonly">@Model.Check_InDay</textbox>
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.Check_OutDay, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    <textbox id="checkoutday" class="form-control" readonly="readonly">@Model.Check_OutDay</textbox>
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.DaysOut, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.DaysOut, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.NightlyRate, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    <div class="input-group">
                                        <div class="input-group-addon">$</div>
                                        @Html.EditorFor(model => model.NightlyRate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.CleaningFees, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    <div class="input-group">
                                        <div class="input-group-addon">$</div>
                                        @Html.EditorFor(model => model.CPL.CleaningFees, new { htmlAttributes = new { @id = "cleaningFee", @class = "form-control", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.TotalPayout, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    <div class="input-group">
                                        <div class="input-group-addon">$</div>
                                        @Html.EditorFor(model => model.TotalPayout, new { htmlAttributes = new { @id = "totalPayout", @class = "form-control", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.Channel, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.Channel, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.AirBnBListingTitle, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.AirBnBListingTitle, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.Weekdayorphandays, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.Weekdayorphandays, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td  colspan="3" class="dialog-3-cells dialog-left-cell" style="padding-top:15px;">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.AdditionalInfo_StatusofInquiry, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.TextAreaFor(model => model.AdditionalInfo_StatusofInquiry, new { @class = "form-control", @readonly = "readonly", rows = "5" })
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>

            <div class="inquiry-tab-pane hide" id="inquiryInfoProperty">
                <table cellpadding="0" cellspacing="10" width="100%">
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.PropertyStatus, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @*@Html.DropDownListFor(model => model.CPL.PropertyStatus, ListProvider.PropertyList)*@
                                    @Html.EditorFor(model => model.CPL.PropertyStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Vertical, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Vertical, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Market, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Market, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Address, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.State, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.State, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Zipcode, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Zipcode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.BookingGuidelines, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.TextAreaFor(model => model.CPL.BookingGuidelines, new { @class = "form-control", @readonly = "readonly", rows = "5" })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    <label class="control-label">Operations Contact</label>
                                </div>
                                <div>
                                    @Html.TextAreaFor(model => model.CPL.AirbnbiCalexportlink, new { @class = "form-control", @readonly = "readonly", rows = "5" })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.CrossStreets, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    <div>
                                        @Html.TextAreaFor(model => model.CPL.CrossStreets, new { @class = "form-control", @readonly = "readonly", rows = "2" })
                                    </div>
                                    <div>
                                        @Html.LabelFor(model => model.CPL.SquareFootage, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div>
                                        @Html.EditorFor(model => model.CPL.SquareFootage, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Bedrooms, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Bedrooms, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.BedsDescription, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.BedsDescription, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Bathrooms, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Bathrooms, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Floor, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Floor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.StdOcc, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.StdOcc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.MaxOcc, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.MaxOcc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Elevator, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Elevator, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.A_C, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.A_C, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.Parking, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.Parking, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.WiFiNetwork, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.WiFiNetwork, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.WiFiPassword, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.WiFiPassword, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.BeltDesignation, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @Html.EditorFor(model => model.CPL.BeltDesignation, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="dialog-row dialog-link">
                        <td class="dialog-3-cells dialog-left-cell">
                            <div class="control-group">
                                <a href="@Model.CPL.Amenities" target="_blank">Amenities Link</a>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-left-cell dialog-right-cell">
                            <div class="control-group">
                                <a href="@Model.CPL.AirBnb" target="_blank">AirBnb Link</a>
                            </div>
                        </td>
                        <td class="dialog-3-cells dialog-right-cell">
                            <div class="control-group">
                                <a href="@Model.CPL.HomeAway" target="_blank">HomeAway Link</a>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>

            <div class="inquiry-tab-pane hide" id="inquiryInfoApproval" style="width:50%;">
                @if (Model.CPL.NeedsOwnerApproval.HasValue && Model.CPL.NeedsOwnerApproval.Value)
                {
                    <div class="col-xs-12">
                        <div class="form-input-item">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.CPL.NeedsOwnerApproval, htmlAttributes: new { @class = "alert alert-warning" })
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="col-xs-12">
                    <div class="form-input-item">
                        <div class="control-group">
                            <div>
                                @Html.LabelFor(model => model.ApprovedbyOwner, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div>
                                @Html.EditorFor(model => model.ApprovedbyOwner, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="form-input-item">
                        <div class="control-group">
                            @Html.LabelFor(model => model.PricingApprover1, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.PricingApprover1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                </div>
                @if (Model.CPL.BeltDesignation == "Black belt")
                {
                    <div class="col-xs-12">
                        <div class="form-input-item">
                            <div class="control-group">
                                <div>
                                    @Html.LabelFor(model => model.PricingApprover2, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div>
                                    @*@Html.DropDownListFor(model => model.PricingApprover2, ListProvider.AproverList, new { @class = "form-control" })*@
                                    @Html.EditorFor(model => model.PricingApprover2, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-xs-12">
                    <div class="form-input-item">
                        <div class="control-group">
                            <div>
                                @Html.LabelFor(model => model.PricingDecision1, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div>
                                @Html.EditorFor(model => model.PricingDecision1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="form-input-item">
                        <div class="control-group">
                            <div>
                                @Html.LabelFor(model => model.PricingReason1, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div>
                                @Html.TextAreaFor(model => model.PricingReason1, new { @class = "form-control", @readonly = "readonly", rows = "6" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="inquiryInfoTemplate" class="inquiry-tab-pane hide">
                @{
                    decimal? nr = ConversionHelper.RoundToZn(Model.NightlyRate, 2);
                    decimal? gp = ConversionHelper.RoundToZn((Model.LengthofStay * Model.NightlyRate), 2);
                    decimal? grrmaf = ConversionHelper.RoundToZn((gp * (decimal)0.97), 2);
                    decimal? acfmaf = null;
                    if (Model.CPL.CleaningFees != null)
                    {
                        acfmaf = ConversionHelper.RoundToZn((decimal?)((Model.CPL.CleaningFees.Value) * 0.97), 2);
                    }
                    decimal? comm = null;
                    if (Model.CPL.Ownership != null)
                    {
                        comm = ConversionHelper.RoundToZn((grrmaf * (decimal)(1 - Model.CPL.Ownership)), 2);
                    }
                    decimal? dnto;
                    if (Model.CPL.Vertical == "PS")
                    {
                        dnto = ConversionHelper.RoundToZn((grrmaf - comm) / Model.LengthofStay - acfmaf / Model.LengthofStay, 2);
                    }
                    else
                    {
                        dnto = ConversionHelper.RoundToZn((grrmaf - comm) / Model.LengthofStay, 2);
                    }
                }
                <br />
                <textarea class="form-control" rows="22">
                    @Model.CPL.Address
                    ----------------------------
                    Guest Name: @Model.GuestName
                    Guest Description: @Model.BookingGuidelines
                    Check-in Date: @(Model.Check_inDate != null ? Model.Check_inDate.Value.ToString("d") : "")
                    Check-Out Date: @(Model.Check_outDate != null ? Model.Check_outDate.Value.ToString("d") : "")
                    Length of Stay: @Model.LengthofStay
                    Nightly Rate: @nr
                    Gross Payout: @gp

                    ----------------------------

                    GROSS ROOM RENT MINUS AIRBNB FEE: @grrmaf
                    CLEANING FEE: @Model.CPL.CleaningFees
                    ADJUSTED CLEANING FEE MINUS AIRBNB FEE: @acfmaf
                    COMMISSION % : @(1 - Model.CPL.Ownership)
                    COMMISSION: @comm
                    DAILY NET TO OWNER: @dnto
                </textarea>
            </div>
        </div>
    </div>
</div>
